{"version":3,"file":"static/js/912.55feaac4.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContacsPage/ContacsPage.styled.jsx","pages/ContacsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: max-content;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\nexport const Name = styled.input`\n  margin-left: 7px;\n  font-size: 20px;\n`;\nexport const Telephone = styled.input`\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 350px;\n  height: 50px;\n  border-radius: 10px;\n  color: white;\n  background-color: rgb(62, 85, 216);\n  font-size: 15px;\n  font-weight: 700;\n  border-color: transparent;\n  &:hover {\n    color: rgba(255, 255, 255, 0.5);\n    -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n    -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n    box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { Form, Label, Name, Telephone, Button } from './ContactForm.styled';\nimport { contactsSelectors } from 'redux/contacts';\nimport { contactsOperations } from 'redux/contacts';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  // const contacts = useSelector(state => state.contacts.contacts);\n  const contacts = useSelector(contactsSelectors.getAllContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!name.trim() || !number.trim()) {\n      alert('Warning! Please enter correct data! ');\n      return;\n    }\n    if (contacts.find(contact => contact.name === name)) {\n      alert(\n        'Warning! A contact with this name already exists in the contact book! '\n      );\n      return;\n    }\n    dispatch(contactsOperations.addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name:\n        <Name\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          autoComplete=\"off\"\n          required\n        />\n      </Label>\n      <Label>\n        Tel:\n        <Telephone\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          autoComplete=\"off\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  margin-top: 20px;\n`;\nexport const ContactContainer = styled.li`\n  width: 300px;\n  border: 1px solid blue;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  background-color: rgba(164, 192, 238, 0.698);\n  border-radius: 20px;\n  padding: 10px;\n\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Info = styled.div`\n  font-size: 15px;\n  font-weight: 600;\n  font-style: italic;\n`;\n\nexport const Name = styled.p``;\nexport const Telephone = styled.p``;\nexport const Button = styled.button`\n  border-radius: 50%;\n  border-color: transparent;\n  width: 70px;\n  height: 70px;\n\n  background-color: red;\n  color: white;\n  font-size: 15px;\n  font-weight: 600;\n\n  &:hover {\n    color: rgba(255, 255, 255, 0.5);\n    -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n    -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n    box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Spinner = styled.div`\n  width: 40px;\n  height: 40px;\n  position: relative;\n`;\n\nexport const Dot = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  &::before {\n    content: '';\n    display: block;\n    margin: 0 auto;\n    width: 15%;\n    height: 15%;\n    background-color: #f4f4f4;\n    border-radius: 100%;\n\n    animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\n    animation-delay: ${({ animationDelay }) => {\n      return animationDelay;\n    }};\n  }\n  transform: ${({ rotateDeg }) => {\n    return ` rotate(${rotateDeg})`;\n  }};\n\n  @keyframes sk-circleBounceDelay {\n    0%,\n    80%,\n    100% {\n      transform: scale(0);\n    }\n    40% {\n      transform: scale(1);\n    }\n  }\n`;\n","import { Dot, Spinner } from './Loader.styled';\n\nconst Loader = () => (\n  <Spinner>\n    <Dot rotateDeg=\"0deg\" animationDelay=\"0s\" />\n    <Dot rotateDeg=\"30deg\" animationDelay=\"-1.1s\" />\n    <Dot rotateDeg=\"60deg\" animationDelay=\"-1s\" />\n    <Dot rotateDeg=\"90deg\" animationDelay=\"-0.9s\" />\n    <Dot rotateDeg=\"120deg\" animationDelay=\"-0.8s\" />\n    <Dot rotateDeg=\"150deg\" animationDelay=\"-0.7s\" />\n    <Dot rotateDeg=\"180deg\" animationDelay=\"-0.6s\" />\n    <Dot rotateDeg=\"210deg\" animationDelay=\"-0.5s\" />\n    <Dot rotateDeg=\"240deg\" animationDelay=\"-0.4s\" />\n    <Dot rotateDeg=\"270deg\" animationDelay=\"-0.3s\" />\n    <Dot rotateDeg=\"300deg\" animationDelay=\"-0.2s\" />\n    <Dot rotateDeg=\"330deg\" animationDelay=\"-0.1s\" />\n  </Spinner>\n);\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const ContactContainer = styled.li`\n  width: 300px;\n  border: 1px solid blue;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  background-color: rgba(164, 192, 238, 0.698);\n  border-radius: 20px;\n  padding: 10px;\n\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Info = styled.div`\n  font-size: 15px;\n  font-weight: 600;\n  font-style: italic;\n`;\n\nexport const Name = styled.p``;\n\nexport const Telephone = styled.p``;\n\nexport const Button = styled.button`\n  border-radius: 50%;\n  border-color: transparent;\n  width: 70px;\n  height: 70px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: red;\n  color: white;\n  font-size: 15px;\n  font-weight: 600;\n\n  &:hover {\n    color: rgba(255, 255, 255, 0.5);\n    -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n    -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n    box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2) inset;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  ContactContainer,\n  Info,\n  Name,\n  Telephone,\n  Button,\n} from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isContactDeleting = useSelector(state => state.contacts.isDeleting);\n\n  const isDeleting = isContactDeleting.id === id && isContactDeleting.status;\n\n  return (\n    <ContactContainer>\n      <Info>\n        <Name>Name: {name}</Name>\n        <Telephone>Tel: {number}</Telephone>\n      </Info>\n      <Button\n        type=\"button\"\n        onClick={() => {\n          dispatch(contactsOperations.deleteContact(id));\n        }}\n      >\n        {isDeleting ? <Loader /> : 'Delete'}\n      </Button>\n    </ContactContainer>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { List } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\n// import { contactsOperations } from 'redux/contacts';\n// import { useEffect } from 'react';\n\nfunction ContactList() {\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n\n  // useEffect(() => {}, [contacts]);\n\n  return (\n    <List>\n      {contacts.length !== 0 &&\n        contacts.map(({ id, name, number }) => (\n          <Contact key={id} id={id} name={name} number={number} />\n        ))}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 10px;\n\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const Search = styled.input`\n  margin-top: 7px;\n  margin-left: 10px;\n  font-size: 18px;\n  width: 158px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Label, Search } from './Filter.styled';\nimport { contactsOperations } from 'redux/contacts';\nimport { useState } from 'react';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState('');\n\n  const handleChange = event => {\n    const filter = event.target.value;\n    setFilter(filter);\n    dispatch(contactsOperations.changeFilter(event.target.value));\n  };\n\n  return (\n    <Label>\n      Filter by name:\n      <Search type=\"text\" value={filter} onChange={handleChange} />\n    </Label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ContactPageContainer = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { ContactPageContainer } from './ContacsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactPageContainer>\n      <h1>Contacts</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </ContactPageContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","Label","Name","Telephone","Button","dispatch","useDispatch","contacts","useSelector","contactsSelectors","useState","name","setName","number","setNumber","handleChange","event","target","value","onSubmit","preventDefault","trim","find","contact","alert","contactsOperations","type","pattern","title","onChange","autoComplete","required","List","Spinner","Dot","animationDelay","rotateDeg","ContactContainer","Info","Contact","id","isContactDeleting","state","isDeleting","status","onClick","length","map","Search","filter","setFilter","ContactPageContainer","useEffect"],"sourceRoot":""}