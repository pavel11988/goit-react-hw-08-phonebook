{"version":3,"file":"static/js/589.1a475c91.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,EAAAA,KAAH,qEAKJC,EAAQD,EAAAA,EAAAA,MAAH,8JAQLE,EAAQF,EAAAA,EAAAA,MAAH,8EAKLG,EAASH,EAAAA,EAAAA,OAAH,0T,SC6CnB,EA1DkB,WAChB,IAAMI,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAeN,OACE,4BACE,mCAEA,UAACf,EAAD,CAAMgB,SAfW,SAAAC,GACnBA,EAAMC,iBACDV,GAAUE,GAIfL,EAASc,EAAAA,GAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KALVS,MAAM,+BAYwBC,aAAa,MAA3C,WACE,UAACnB,EAAD,qBAEE,SAACC,EAAD,CACEmB,KAAK,QACLR,KAAK,QACLC,MAAOP,EACPe,SAAUX,QAId,UAACV,EAAD,uBAEE,SAACC,EAAD,CACEmB,KAAK,WACLR,KAAK,WACLC,MAAOL,EACPa,SAAUX,QAId,SAACR,EAAD,CAAQkB,KAAK,SAAb","sources":["pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 270px;\n  height: 30px;\n  margin-bottom: 5px;\n`;\nexport const Input = styled.input`\n  height: 25px;\n  width: 180px;\n  font-size: 17px;\n`;\nexport const Button = styled.button`\n  margin-top: 10px;\n  width: 270px;\n  height: 40px;\n  background-color: #1a1acf;\n  border-radius: 10px;\n  border-color: transparent;\n  font-size: 17px;\n  font-weight: 700;\n  color: white;\n  &:hover {\n    background-color: #0d0d9f;\n    color: #bbbbbb;\n    cursor: pointer;\n  }\n`;\n","// import { Formik, Field, Form } from 'formik';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nimport { Form, Label, Input, Button } from 'pages/LoginPage/LoginPage.styled';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!email || !password) {\n      alert('Not all fields are filled!');\n      return;\n    }\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          E-mail\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Button type=\"submit\">LogIn</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Form","styled","Label","Input","Button","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","event","preventDefault","authOperations","alert","autoComplete","type","onChange"],"sourceRoot":""}